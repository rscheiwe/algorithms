/*
projecteuler.net
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

function fibonacci(n) {
  if (n === 1) {
    return [0,1]
  } else {
    let s = fibonacci(n - 1)
    s.push(s[s.length - 1] + s[s.length - 2])
    return s
  }
}

function fiboEven(number) {
  let fiboSeries = fibonacci(number)
  let evens = []
  for (let num of fiboSeries) {
    if (num % 2 === 0 && num < 4e6) evens.push(num)
  }
  return evens.reduce((a, b) => a+b, 0)
}

module.exports = fiboEven

// var fibonacci = [0, 1, 1, 2];
// var i = 4;
// var sum = 0;
//
// while (fibonacci[i-1] + fibonacci[i-2] <= 4000000){
//   fibonacci[i] = fibonacci[i-1] + fibonacci[i-2];
//   i += 1;
// }
//
// for (var j in fibonacci){
//   sum += fibonacci[j];
// }
